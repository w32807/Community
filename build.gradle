plugins {
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
}

group = 'com.jwj'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExt
	// 내장 톰캣의 경우 ProvideRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	// 이렇게 되어있는데 인텔리제이에서 인식 못하는 경우가 있다.
	// 그럴 때는 customProvidedRuntime를 configurations 선언 후
	// customProvidedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' 로 바꿔주자
	customProvidedRuntime
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext{
	asciidocVersion = "2.0.6.RELEASE"
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	customProvidedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	// querydsl (이후에 gradle > classes 실행)
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	// utils
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.google.guava:guava:30.1.1-jre'
	implementation 'org.projectlombok:lombok'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'com.google.code.gson:gson:2.8.5'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	annotationProcessor 'org.projectlombok:lombok'

	// DB
	implementation 'com.h2database:h2'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring restDocs
	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"
}

tasks.named('test') {
	useJUnitPlatform()

}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	copy {
		from asciidoctor.outputDir
		println ">>>>" + asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}